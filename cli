<?php
require_once "boot.php";

use Framework\Terminal\Terminal;
use Framework\Database\DatabaseBuilder;

try {
    echo call_user_func_array($command, $arguments)."\n";
}
catch(ArgumentCountError $e) {
    echo Terminal::error($e->getMessage());
}

function database(string $function, array $params, array $flags): string
{
    $name = getParam($params, "name", $_ENV["MYSQLI_DATABASE"]);
    switch ($function) {
        case "create": {
            if(in_array('recreate',$flags)) {
                echo DatabaseBuilder::delete($name);
            }
            echo DatabaseBuilder::create($name);
            if(in_array('seed', $flags)) {
                echo DatabaseBuilder::seed($name);
            }
            return "";
        }
        case "delete": {
            return DatabaseBuilder::delete($name);
        }
        case "flush": {
            return DatabaseBuilder::flush($name);
        }
        case "seed": {
            return DatabaseBuilder::seed($name);
        }
        default: {
            return Terminal::error("Command doesn't exist");
        }
    }
}

function table(string $function, array $params, array $flags): string
{
    $name = getParam($params, "name", "tables");
    return Terminal::println("Table name `".Terminal::variable($name, Terminal::RED)."`", Terminal::RED);
}